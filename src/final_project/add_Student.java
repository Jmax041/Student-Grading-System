/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package final_project;

import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;

/**
 *
 * @author Jimuel
 */
public class add_Student extends javax.swing.JFrame {

    /**
     * Creates new form add_Student
     */
    public add_Student() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        framePanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        menuPanel = new javax.swing.JPanel();
        menuHeader = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        addStudent = new javax.swing.JButton();
        updateGrade = new javax.swing.JButton();
        report = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        addStudentLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        gradeLabel = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        gradeText = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Grading System");

        framePanel.setBackground(new java.awt.Color(255, 255, 255));

        headerPanel.setBackground(new java.awt.Color(224, 100, 100));

        header.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("STUDENT GRADING SYSTEM");
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                headerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(header)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        menuPanel.setBackground(new java.awt.Color(224, 100, 100));
        menuPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        menuHeader.setBackground(new java.awt.Color(234, 208, 172));

        headerLabel.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        headerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabel.setText("Main Menu");

        javax.swing.GroupLayout menuHeaderLayout = new javax.swing.GroupLayout(menuHeader);
        menuHeader.setLayout(menuHeaderLayout);
        menuHeaderLayout.setHorizontalGroup(
            menuHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuHeaderLayout.setVerticalGroup(
            menuHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuHeaderLayout.createSequentialGroup()
                .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        home.setBackground(new java.awt.Color(224, 100, 100));
        home.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        home.setText("Home");
        home.setBorder(null);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        addStudent.setBackground(new java.awt.Color(224, 100, 100));
        addStudent.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addStudent.setText("Add Student");
        addStudent.setToolTipText("");
        addStudent.setBorder(null);
        addStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentActionPerformed(evt);
            }
        });

        updateGrade.setBackground(new java.awt.Color(224, 100, 100));
        updateGrade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        updateGrade.setText("Update Grade");
        updateGrade.setToolTipText("");
        updateGrade.setBorder(null);
        updateGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateGradeActionPerformed(evt);
            }
        });

        report.setBackground(new java.awt.Color(224, 100, 100));
        report.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        report.setText("View Grades");
        report.setToolTipText("");
        report.setBorder(null);
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        logout.setBackground(new java.awt.Color(224, 100, 100));
        logout.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        logout.setText("Logout");
        logout.setToolTipText("");
        logout.setBorder(null);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(home, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(updateGrade, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
            .addComponent(report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(logout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addComponent(menuHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(home)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateGrade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(report)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logout)
                .addGap(0, 152, Short.MAX_VALUE))
        );

        mainPanel.setBackground(new java.awt.Color(251, 195, 185));
        mainPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        addStudentLabel.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        addStudentLabel.setText("--------- ADD STUDENT ---------");

        nameLabel.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        nameLabel.setText("Name:");

        gradeLabel.setFont(new java.awt.Font("Constantia", 1, 12)); // NOI18N
        gradeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        gradeLabel.setText("Grade:");

        nameText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        nameText.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        gradeText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        gradeText.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        gradeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeTextActionPerformed(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addStudentLabel)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(gradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gradeText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameText))))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(addStudentLabel)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gradeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gradeText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitButton)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout framePanelLayout = new javax.swing.GroupLayout(framePanel);
        framePanel.setLayout(framePanelLayout);
        framePanelLayout.setHorizontalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        framePanelLayout.setVerticalGroup(
            framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(framePanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(framePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(framePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(framePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    Connection con = null;
    PreparedStatement psm = null;
    ResultSet rs = null;
    Statement sm = null;
    
    private int myID;
    private String myEmail;
    
    public add_Student(int teacherID, String email){
        
        initComponents();
        myID = teacherID;
        myEmail = email;
    }
    
    private void clearText(){
        nameText.setText("");
        gradeText.setText("");
    }
    
    private boolean studentAlreadyExists(String name, int teacherID) {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gradedb", "root", "");
            PreparedStatement statement = con.prepareStatement("SELECT COUNT(*) FROM student WHERE name = ? AND teacherID = ?");
            statement.setString(1, name);
            statement.setInt(2, teacherID);
            ResultSet resultSet = statement.executeQuery();
            resultSet.next();
            int count = resultSet.getInt(1);
            con.close();
            return count > 0;
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error checking name existence: " + e.getMessage());
            return false;
        }
    }
    
    private void headerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_headerMouseClicked

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed

        String retrieve = "SELECT * FROM account where email ='"+ myEmail +"' ";
        try{

            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gradedb","root","");
            sm = con.createStatement();
            rs = sm.executeQuery(retrieve);

            if(rs.next()){

                new main_Menu(rs.getInt(1), rs.getString(2), rs.getString(4), rs.getString(5), rs.getString(6)).setVisible(true);
                this.dispose();
            }

        }

        catch(Exception e){

            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_homeActionPerformed

    private void addStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentActionPerformed

        String retrieve = "SELECT * FROM account where email ='"+ myEmail +"' ";
        try{

            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gradedb","root","");
            sm = con.createStatement();
            rs = sm.executeQuery(retrieve);

            if(rs.next()){

                new add_Student(rs.getInt(1), rs.getString(2)).setVisible(true);
                this.dispose();
            }

        }

        catch(Exception e){

            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_addStudentActionPerformed

    private void updateGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateGradeActionPerformed

        String retrieve = "SELECT * FROM account where email ='"+ myEmail +"' ";
        try{

            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gradedb","root","");
            sm = con.createStatement();
            rs = sm.executeQuery(retrieve);

            if(rs.next()){

                new update_Grade(rs.getInt(1), rs.getString(2)).setVisible(true);
                this.dispose();
            }

        }

        catch(Exception e){

            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_updateGradeActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        
        String retrieve = "SELECT * FROM account where email ='"+ myEmail +"' ";
        try{

            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gradedb","root","");
            sm = con.createStatement();
            rs = sm.executeQuery(retrieve);

            if(rs.next()){

                new view_Grade(rs.getInt(1), rs.getString(2)).setVisible(true);
                this.dispose();
            }

        }

        catch(Exception e){

            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_reportActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed

        int response = JOptionPane.showConfirmDialog(this, "Do you really want to logout?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if(response==JOptionPane.YES_OPTION){
            new front_Page().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_logoutActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void gradeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gradeTextActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed

        if(nameText.getText().isEmpty() || gradeText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Name or grade is missing!");
        }
        
        else if(!gradeText.getText().matches("\\d+")){
            JOptionPane.showMessageDialog(this, "Grade must contain only numeric characters!");
        }
        
        else if (Integer.parseInt(gradeText.getText()) < 0){
            JOptionPane.showMessageDialog(this, "Grade cannot be a negative number!");
        }
        
        else if (Integer.parseInt(gradeText.getText()) > 100){
            JOptionPane.showMessageDialog(this, "Grade cannot be more than 100!");
        }
        
        else if (studentAlreadyExists(nameText.getText(), myID)) {
            JOptionPane.showMessageDialog(this, "This student already exists!");
        }
        
        else{

            try{
                
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gradedb","root","");
                PreparedStatement add = con.prepareStatement("INSERT INTO student VALUES(?,?,?,?)");
                add.setInt(1,0);
                add.setString(2,nameText.getText());
                add.setInt(3,Integer.parseInt(gradeText.getText()));
                add.setInt(4,myID);
                
                add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Student added successfully!");
                con.close();
                clearText();
                
                
                String retrieve = "SELECT * FROM account where email ='"+ myEmail +"' ";
                try{

                    con = DriverManager.getConnection("jdbc:mysql://localhost:3306/gradedb","root","");
                    sm = con.createStatement();
                    rs = sm.executeQuery(retrieve);

                    if(rs.next()){

                        new add_Student(rs.getInt(1), rs.getString(2)).setVisible(true);
                        this.dispose();
                    }

                }
                
                catch(Exception e){

                    JOptionPane.showMessageDialog(this, e);
                }
            }

            catch(Exception e){

                JOptionPane.showMessageDialog(this, e);
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new add_Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStudent;
    private javax.swing.JLabel addStudentLabel;
    private javax.swing.JPanel framePanel;
    private javax.swing.JLabel gradeLabel;
    private javax.swing.JTextField gradeText;
    private javax.swing.JLabel header;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton home;
    private javax.swing.JButton logout;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuHeader;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JButton report;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton updateGrade;
    // End of variables declaration//GEN-END:variables
}
